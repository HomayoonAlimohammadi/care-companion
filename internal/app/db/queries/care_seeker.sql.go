// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: care_seeker.sql

package queries

import (
	"context"
)

const createCareSeeker = `-- name: CreateCareSeeker :exec
insert into care_seeker (name)
values ($1)
`

func (q *Queries) CreateCareSeeker(ctx context.Context, db DBTX, name string) error {
	_, err := db.Exec(ctx, createCareSeeker, name)
	return err
}

const deleteCareSeekerByID = `-- name: DeleteCareSeekerByID :exec
delete from care_seeker where id = $1
`

func (q *Queries) DeleteCareSeekerByID(ctx context.Context, db DBTX, id int64) error {
	_, err := db.Exec(ctx, deleteCareSeekerByID, id)
	return err
}

const deleteCareSeekerByName = `-- name: DeleteCareSeekerByName :exec
delete from care_seeker where name = $1
`

func (q *Queries) DeleteCareSeekerByName(ctx context.Context, db DBTX, name string) error {
	_, err := db.Exec(ctx, deleteCareSeekerByName, name)
	return err
}

const getCareSeekerByID = `-- name: GetCareSeekerByID :one
select id, name from care_seeker
where id = $1
`

func (q *Queries) GetCareSeekerByID(ctx context.Context, db DBTX, id int64) (CareSeeker, error) {
	row := db.QueryRow(ctx, getCareSeekerByID, id)
	var i CareSeeker
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getCareSeekerByName = `-- name: GetCareSeekerByName :one
select id, name from care_seeker
where name = $1
`

func (q *Queries) GetCareSeekerByName(ctx context.Context, db DBTX, name string) (CareSeeker, error) {
	row := db.QueryRow(ctx, getCareSeekerByName, name)
	var i CareSeeker
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const updateCareSeeker = `-- name: UpdateCareSeeker :exec
update care_seeker 
set name = $1 where id = $2
`

type UpdateCareSeekerParams struct {
	Name string
	ID   int64
}

func (q *Queries) UpdateCareSeeker(ctx context.Context, db DBTX, arg UpdateCareSeekerParams) error {
	_, err := db.Exec(ctx, updateCareSeeker, arg.Name, arg.ID)
	return err
}
